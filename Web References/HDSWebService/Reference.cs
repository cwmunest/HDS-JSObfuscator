//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18408
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18408 版自动生成。
// 
#pragma warning disable 1591

namespace HDS.JSObfuscator.HDSWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="HDJSORegisterSoap", Namespace="http://tempuri.org/")]
    public partial class HDJSORegister : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckValidOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckValid2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegisterCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCheckCodeSizeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UsedStatsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDownloadTimesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public HDJSORegister() {
            this.Url = global::HDS.JSObfuscator.Properties.Settings.Default.Mojso_HDSWebService_HDJSORegister;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event CheckValidCompletedEventHandler CheckValidCompleted;
        
        /// <remarks/>
        public event CheckValid2CompletedEventHandler CheckValid2Completed;
        
        /// <remarks/>
        public event GetRegisterCodeCompletedEventHandler GetRegisterCodeCompleted;
        
        /// <remarks/>
        public event GetCheckCodeSizeCompletedEventHandler GetCheckCodeSizeCompleted;
        
        /// <remarks/>
        public event UsedStatsCompletedEventHandler UsedStatsCompleted;
        
        /// <remarks/>
        public event UpdateDownloadTimesCompletedEventHandler UpdateDownloadTimesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckValid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckValid(string macCode, string createdDate, string code, string ip) {
            object[] results = this.Invoke("CheckValid", new object[] {
                        macCode,
                        createdDate,
                        code,
                        ip});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckValidAsync(string macCode, string createdDate, string code, string ip) {
            this.CheckValidAsync(macCode, createdDate, code, ip, null);
        }
        
        /// <remarks/>
        public void CheckValidAsync(string macCode, string createdDate, string code, string ip, object userState) {
            if ((this.CheckValidOperationCompleted == null)) {
                this.CheckValidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckValidOperationCompleted);
            }
            this.InvokeAsync("CheckValid", new object[] {
                        macCode,
                        createdDate,
                        code,
                        ip}, this.CheckValidOperationCompleted, userState);
        }
        
        private void OnCheckValidOperationCompleted(object arg) {
            if ((this.CheckValidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckValidCompleted(this, new CheckValidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckValid2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckValid2(string macCode, string createdDate, string code, string ip) {
            object[] results = this.Invoke("CheckValid2", new object[] {
                        macCode,
                        createdDate,
                        code,
                        ip});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckValid2Async(string macCode, string createdDate, string code, string ip) {
            this.CheckValid2Async(macCode, createdDate, code, ip, null);
        }
        
        /// <remarks/>
        public void CheckValid2Async(string macCode, string createdDate, string code, string ip, object userState) {
            if ((this.CheckValid2OperationCompleted == null)) {
                this.CheckValid2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckValid2OperationCompleted);
            }
            this.InvokeAsync("CheckValid2", new object[] {
                        macCode,
                        createdDate,
                        code,
                        ip}, this.CheckValid2OperationCompleted, userState);
        }
        
        private void OnCheckValid2OperationCompleted(object arg) {
            if ((this.CheckValid2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckValid2Completed(this, new CheckValid2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRegisterCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRegisterCode(string userName, string macCode, string createdDate) {
            object[] results = this.Invoke("GetRegisterCode", new object[] {
                        userName,
                        macCode,
                        createdDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRegisterCodeAsync(string userName, string macCode, string createdDate) {
            this.GetRegisterCodeAsync(userName, macCode, createdDate, null);
        }
        
        /// <remarks/>
        public void GetRegisterCodeAsync(string userName, string macCode, string createdDate, object userState) {
            if ((this.GetRegisterCodeOperationCompleted == null)) {
                this.GetRegisterCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegisterCodeOperationCompleted);
            }
            this.InvokeAsync("GetRegisterCode", new object[] {
                        userName,
                        macCode,
                        createdDate}, this.GetRegisterCodeOperationCompleted, userState);
        }
        
        private void OnGetRegisterCodeOperationCompleted(object arg) {
            if ((this.GetRegisterCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegisterCodeCompleted(this, new GetRegisterCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCheckCodeSize", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCheckCodeSize() {
            object[] results = this.Invoke("GetCheckCodeSize", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCheckCodeSizeAsync() {
            this.GetCheckCodeSizeAsync(null);
        }
        
        /// <remarks/>
        public void GetCheckCodeSizeAsync(object userState) {
            if ((this.GetCheckCodeSizeOperationCompleted == null)) {
                this.GetCheckCodeSizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCheckCodeSizeOperationCompleted);
            }
            this.InvokeAsync("GetCheckCodeSize", new object[0], this.GetCheckCodeSizeOperationCompleted, userState);
        }
        
        private void OnGetCheckCodeSizeOperationCompleted(object arg) {
            if ((this.GetCheckCodeSizeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCheckCodeSizeCompleted(this, new GetCheckCodeSizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UsedStats", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UsedStats(string userip) {
            this.Invoke("UsedStats", new object[] {
                        userip});
        }
        
        /// <remarks/>
        public void UsedStatsAsync(string userip) {
            this.UsedStatsAsync(userip, null);
        }
        
        /// <remarks/>
        public void UsedStatsAsync(string userip, object userState) {
            if ((this.UsedStatsOperationCompleted == null)) {
                this.UsedStatsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUsedStatsOperationCompleted);
            }
            this.InvokeAsync("UsedStats", new object[] {
                        userip}, this.UsedStatsOperationCompleted, userState);
        }
        
        private void OnUsedStatsOperationCompleted(object arg) {
            if ((this.UsedStatsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UsedStatsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateDownloadTimes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateDownloadTimes(string pid) {
            object[] results = this.Invoke("UpdateDownloadTimes", new object[] {
                        pid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDownloadTimesAsync(string pid) {
            this.UpdateDownloadTimesAsync(pid, null);
        }
        
        /// <remarks/>
        public void UpdateDownloadTimesAsync(string pid, object userState) {
            if ((this.UpdateDownloadTimesOperationCompleted == null)) {
                this.UpdateDownloadTimesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDownloadTimesOperationCompleted);
            }
            this.InvokeAsync("UpdateDownloadTimes", new object[] {
                        pid}, this.UpdateDownloadTimesOperationCompleted, userState);
        }
        
        private void OnUpdateDownloadTimesOperationCompleted(object arg) {
            if ((this.UpdateDownloadTimesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDownloadTimesCompleted(this, new UpdateDownloadTimesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CheckValidCompletedEventHandler(object sender, CheckValidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckValidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckValidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CheckValid2CompletedEventHandler(object sender, CheckValid2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckValid2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckValid2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetRegisterCodeCompletedEventHandler(object sender, GetRegisterCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegisterCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegisterCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCheckCodeSizeCompletedEventHandler(object sender, GetCheckCodeSizeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCheckCodeSizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCheckCodeSizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UsedStatsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateDownloadTimesCompletedEventHandler(object sender, UpdateDownloadTimesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDownloadTimesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDownloadTimesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591